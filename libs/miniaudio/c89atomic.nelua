local c89atomic_memory_order_relaxed: cint <cimport,nodecl,const>
local c89atomic_memory_order_consume: cint <cimport,nodecl,const>
local c89atomic_memory_order_acquire: cint <cimport,nodecl,const>
local c89atomic_memory_order_release: cint <cimport,nodecl,const>
local c89atomic_memory_order_acq_rel: cint <cimport,nodecl,const>
local c89atomic_memory_order_seq_cst: cint <cimport,nodecl,const>
global function c89atomic_compiler_fence() <cimport,nodecl> end
global function c89atomic_thread_fence(order: cint) <cimport,nodecl> end
global function c89atomic_signal_fence(order: cint) <cimport,nodecl> end
global function c89atomic_is_lock_free_8(ptr: *uint8): boolean <cimport,nodecl> end
global function c89atomic_is_lock_free_16(ptr: *uint16): boolean <cimport,nodecl> end
global function c89atomic_is_lock_free_32(ptr: *uint32): boolean <cimport,nodecl> end
global function c89atomic_is_lock_free_64(ptr: *uint64): boolean <cimport,nodecl> end
global function c89atomic_flag_test_and_set_explicit(dst: pointer, order: cint): cuchar <cimport,nodecl> end
global function c89atomic_flag_clear_explicit(dst: pointer, order: cint) <cimport,nodecl> end
global function c89atomic_test_and_set_explicit_8( dst: *uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_test_and_set_explicit_16(dst: *uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_test_and_set_explicit_32(dst: *uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_test_and_set_explicit_64(dst: *uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_clear_explicit_8( dst: *uint8, order: cint) <cimport,nodecl> end
global function c89atomic_clear_explicit_16(dst: *uint16, order: cint) <cimport,nodecl> end
global function c89atomic_clear_explicit_32(dst: *uint32, order: cint) <cimport,nodecl> end
global function c89atomic_clear_explicit_64(dst: *uint64, order: cint) <cimport,nodecl> end
global function c89atomic_store_explicit_8( dst: *uint8, src: uint8, order: cint) <cimport,nodecl> end
global function c89atomic_store_explicit_16(dst: *uint16, src: uint16, order: cint) <cimport,nodecl> end
global function c89atomic_store_explicit_32(dst: *uint32, src: uint32, order: cint) <cimport,nodecl> end
global function c89atomic_store_explicit_64(dst: *uint64, src: uint64, order: cint) <cimport,nodecl> end
global function c89atomic_load_explicit_8( dst: *uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_load_explicit_16(dst: *uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_load_explicit_32(dst: *uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_load_explicit_64(dst: *uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_exchange_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_exchange_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_exchange_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_exchange_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_explicit_8( dst: *uint8, expected: *uint8, desired: uint8, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_explicit_16(dst: *uint16, expected: *uint16, desired: uint16, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_explicit_32(dst: *uint32, expected: *uint32, desired: uint32, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_explicit_64(dst: *uint64, expected: *uint64, desired: uint64, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_explicit_8( dst: *uint8, expected: *uint8, desired: uint8, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_explicit_16(dst: *uint16, expected: *uint16, desired: uint16, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_explicit_32(dst: *uint32, expected: *uint32, desired: uint32, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_explicit_64(dst: *uint64, expected: *uint64, desired: uint64, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_fetch_add_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_fetch_add_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_fetch_add_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_fetch_add_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_fetch_sub_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_fetch_sub_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_fetch_sub_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_fetch_sub_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_fetch_or_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_fetch_or_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_fetch_or_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_fetch_or_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_fetch_xor_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_fetch_xor_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_fetch_xor_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_fetch_xor_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_fetch_and_explicit_8( dst: *uint8, src: uint8, order: cint): uint8 <cimport,nodecl> end
global function c89atomic_fetch_and_explicit_16(dst: *uint16, src: uint16, order: cint): uint16 <cimport,nodecl> end
global function c89atomic_fetch_and_explicit_32(dst: *uint32, src: uint32, order: cint): uint32 <cimport,nodecl> end
global function c89atomic_fetch_and_explicit_64(dst: *uint64, src: uint64, order: cint): uint64 <cimport,nodecl> end
global function c89atomic_compare_and_swap_8 (dst: *uint8, expected: uint8, desired: uint8): uint8 <cimport,nodecl> end
global function c89atomic_compare_and_swap_16(dst: *uint16, expected: uint16, desired: uint16): uint16 <cimport,nodecl> end
global function c89atomic_compare_and_swap_32(dst: *uint32, expected: uint32, desired: uint32): uint32 <cimport,nodecl> end
global function c89atomic_compare_and_swap_64(dst: *uint64, expected: uint64, desired: uint64): uint64 <cimport,nodecl> end
global function c89atomic_is_lock_free_ptr(ptr: pointer): boolean <cimport,nodecl> end
global function c89atomic_load_explicit_ptr(ptr: pointer, order: cint): pointer <cimport,nodecl> end
global function c89atomic_store_explicit_ptr(dst: *pointer, src: pointer, order: cint) <cimport,nodecl> end
global function c89atomic_exchange_explicit_ptr(dst: *pointer, src: pointer, order: cint): pointer <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_explicit_ptr(dst: *pointer, expected: *pointer, desired: pointer, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_explicit_ptr(dst: *pointer, expected: *pointer, desired: pointer, successOrder: cint, failureOrder: cint): boolean <cimport,nodecl> end
global function c89atomic_compare_and_swap_ptr(dst: *pointer, expected: *pointer, desired: pointer): pointer <cimport,nodecl> end
global function c89atomic_flag_test_and_set(ptr: pointer): cuchar <cimport,nodecl> end
global function c89atomic_flag_clear(ptr: pointer) <cimport,nodecl> end
global function c89atomic_test_and_set_8( ptr: *uint8 ) <cimport,nodecl> end
global function c89atomic_test_and_set_16(ptr: *uint16) <cimport,nodecl> end
global function c89atomic_test_and_set_32(ptr: *uint32) <cimport,nodecl> end
global function c89atomic_test_and_set_64(ptr: *uint64) <cimport,nodecl> end
global function c89atomic_clear_8( ptr: *uint8 ) <cimport,nodecl> end
global function c89atomic_clear_16(ptr: *uint16) <cimport,nodecl> end
global function c89atomic_clear_32(ptr: *uint32) <cimport,nodecl> end
global function c89atomic_clear_64(ptr: *uint64) <cimport,nodecl> end
global function c89atomic_store_8(  dst: *uint8 , src: uint8 ) <cimport,nodecl> end
global function c89atomic_store_16( dst: *uint16, src: uint16) <cimport,nodecl> end
global function c89atomic_store_32( dst: *uint32, src: uint32) <cimport,nodecl> end
global function c89atomic_store_64( dst: *uint64, src: uint64) <cimport,nodecl> end
global function c89atomic_store_ptr(dst: *pointer, src: pointer) <cimport,nodecl> end
global function c89atomic_load_8(  ptr: *uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_load_16( ptr: *uint16): uint16 <cimport,nodecl> end
global function c89atomic_load_32( ptr: *uint32): uint32 <cimport,nodecl> end
global function c89atomic_load_64( ptr: *uint64): uint64 <cimport,nodecl> end
global function c89atomic_load_ptr(ptr: *pointer) <cimport,nodecl> end
global function c89atomic_exchange_8(  dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_exchange_16( dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_exchange_32( dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_exchange_64( dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
global function c89atomic_exchange_ptr(dst: *pointer, src: pointer): pointer <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_8(  dst: *uint8 , expected: *uint8 , desired: uint8 ): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_16( dst: *uint16, expected: *uint16, desired: uint16): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_32( dst: *uint32, expected: *uint32, desired: uint32): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_64( dst: *uint64, expected: *uint64, desired: uint64): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_strong_ptr(dst: *pointer, expected: pointer, desired: pointer) <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_8(  dst: *uint8 , expected: *uint8 , desired: uint8 ): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_16( dst: *uint16, expected: *uint16, desired: uint16): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_32( dst: *uint32, expected: *uint32, desired: uint32): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_64( dst: *uint64, expected: *uint64, desired: uint64): boolean <cimport,nodecl> end
global function c89atomic_compare_exchange_weak_ptr(dst: *pointer, expected: pointer, desired: pointer): boolean <cimport,nodecl> end
global function c89atomic_fetch_add_8( dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_fetch_add_16(dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_fetch_add_32(dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_fetch_add_64(dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
global function c89atomic_fetch_sub_8( dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_fetch_sub_16(dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_fetch_sub_32(dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_fetch_sub_64(dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
global function c89atomic_fetch_or_8( dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_fetch_or_16(dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_fetch_or_32(dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_fetch_or_64(dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
global function c89atomic_fetch_xor_8( dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_fetch_xor_16(dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_fetch_xor_32(dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_fetch_xor_64(dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
global function c89atomic_fetch_and_8( dst: *uint8 , src: uint8 ): uint8  <cimport,nodecl> end
global function c89atomic_fetch_and_16(dst: *uint16, src: uint16): uint16 <cimport,nodecl> end
global function c89atomic_fetch_and_32(dst: *uint32, src: uint32): uint32 <cimport,nodecl> end
global function c89atomic_fetch_and_64(dst: *uint64, src: uint64): uint64 <cimport,nodecl> end
