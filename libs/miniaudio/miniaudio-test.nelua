## cflags '-I.'

require 'miniaudio'
require 'C.arg'
require 'C.stdio'

local function data_callback(pDevice: *ma_device, pOutput: pointer, pInput: pointer, frameCount: uint32)
  local pDecoder = (@*ma_decoder)(pDevice.pUserData)
  if not pDecoder then
    return
  end
  ma_decoder_read_pcm_frames(pDecoder, pOutput, frameCount)
end

local result: ma_result
local decoder: ma_decoder
local deviceConfig: ma_device_config
local device: ma_device

if C.argc < 2 then
  error "No input file."
end

result = ma_decoder_init_file(C.argv[1], nilptr, &decoder)
if result ~= 0 then
  error "Failed to load file"
end

deviceConfig = ma_device_config_init(ma_device_type.ma_device_type_playback)
deviceConfig.playback.format   = decoder.outputFormat
deviceConfig.playback.channels = decoder.outputChannels
deviceConfig.sampleRate        = decoder.outputSampleRate
deviceConfig.dataCallback      = data_callback
deviceConfig.pUserData         = &decoder

if ma_device_init(nilptr, &deviceConfig, &device) ~= 0 then
  ma_decoder_uninit(&decoder)
  error "Failed to open playback device."
end

if ma_device_start(&device) ~= 0 then
  ma_device_uninit(&device)
  ma_decoder_uninit(&decoder)
  error "Failed to start playback device."
end

print("Press Enter to quit...")
C.getchar()

ma_device_uninit(&device)
ma_decoder_uninit(&decoder)
